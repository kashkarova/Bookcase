@model Bookcase.ViewModel.AuthorViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">Details</h4>
</div>
<div class="modal-body">
    <img src="~/Content/images/Authors/@Html.DisplayFor(model => model.Photo)" class="author-photo"/>
    <h3>@Html.DisplayFor(model => model.Name)</h3>
    <p class="lead">@Html.DisplayFor(model => model.DateOfBirth)</p>

    <table class="table table-hover table-bordered">
        <thead>
        <tr>
            <td>#</td>
            <td>@Html.LabelFor(x => x.Books.FirstOrDefault().Book.Title)</td>
        </tr>
        </thead>
        <tbody>
        @for (var bookIndex = 0; bookIndex < Model.Books.Count(); bookIndex++)
        {
            <tr>
                <td>@(bookIndex + 1)</td>
                <td>@Html.DisplayFor(x => x.Books[bookIndex].Book.Title)</td>
                <td>
                    @using (Html.BeginForm("DeleteBookFromAuthor", "Author",
                        new {authorId = Model.Id, bookId = Model.Books[bookIndex].BookId}))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Delete" class="btn btn-warning"/>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    <hr/>

    @using (Html.BeginForm("AddBookToAuthor", "Author"))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("authorId", Model.Id)

        <table>
            <tr>
                <td>
                    <input id="autocomplete" name="bookId"/>
                    @*@Html.DropDownList("bookId", ViewData["books"] as SelectList, new {@class = "form-control"})*@
                </td>
                <td>
                    <input type="submit" value="Add" class="btn btn-success"/>
                </td>

            </tr>
        </table>


        <script>
            $(document).ready(function() {
                $("#autocomplete").kendoAutoComplete({
                    dataTextField: "Id",
                    template: "#= Title #",
                    filter: "contains",
                    minLength: 3,
                    dataSource: {
                        type: "json",
                        serverFiltering: true,
                        transport: {
                            read: "../Author/GetViewDataWithBooks"
                        }
                    }
                });
            });
        </script>
    }
</div>


<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
</div>