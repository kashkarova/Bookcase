@model Bookcase.ViewModel.BookViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <h4 class="modal-title">Edit book</h4>
    </div>

    <div class="modal-body form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishingHouse, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishingHouse, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PublishingHouse, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Year, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <input type="submit" value="Save" class="btn btn-success" />
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default", type = "button" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}