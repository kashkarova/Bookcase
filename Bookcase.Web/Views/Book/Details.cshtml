@model Bookcase.ViewModel.BookViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title">Details</h4>
</div>
<div class="modal-body">
    <dl class="dl-horizontal">
        <dt>Title:</dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>Publishing house:</dt>
        <dd>
            @Html.DisplayFor(model => model.PublishingHouse)
        </dd>
        <dt>Year of publishing:</dt>
        <dd>
            @Html.DisplayFor(model => model.Year)
        </dd>
    </dl>
    <h4>Author(s):</h4>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <td>#</td>
                <td>@Html.LabelFor(x => x.Authors.FirstOrDefault().Author.Name)</td>
            </tr>
        </thead>
        <tbody>
            @for (var authorIndex = 0; authorIndex < Model.Authors.Count(); authorIndex++)
            {
                <tr>
                    <td>@(authorIndex + 1)</td>
                    <td>@Html.DisplayFor(x => x.Authors[authorIndex].Author.Name)</td>
                    <td>
                        @using (Html.BeginForm("DeleteAuthorFromBook", "Book",
                new { bookId = Model.Id, authorId = Model.Authors[authorIndex].AuthorId }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="submit" value="Delete" class="btn btn-warning" />
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr />

    @using (Ajax.BeginForm("AddAuthorToBook", "Book", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("bookId", Model.Id)
        <table>
            <tr>
                <td>
                    <input id="autocomplete" name="authorName" />
                    @Html.ValidationMessageFor(model => Model.Authors)
                    @*@Html.DropDownList("bookId", ViewData["books"] as SelectList, new {@class = "form-control"})*@
                </td>

                <td>
                    <input type="submit" value="Add" class="btn btn-success" />
                </td>

            </tr>
        </table>

        <script>
            $(document).ready(function () {
                $("#autocomplete").kendoAutoComplete({
                    dataTextField: "Name",
                    template: "#= Name #",
                    filter: "contains",
                    minLength: 3,
                    dataSource: {
                        type: "json",
                        serverFiltering: true,
                        transport: {
                            read: "../Book/GetAllAuthors"
                        }
                    }
                })
            });

            function OnSuccess(data) {
                alert("Author has been added succesfully! Refresh the page!");
            }

            function OnFailure(data) {
                alert("Ooops...Such author is exists, so you can`t add him again.");
            }
        </script>
    }
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="myDialog" class="modal-content">
        </div>
    </div>
</div>